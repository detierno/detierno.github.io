<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[coding life]]></title>
  <link href="http://detierno.github.io/atom.xml" rel="self"/>
  <link href="http://detierno.github.io/"/>
  <updated>2014-08-31T20:33:44-03:00</updated>
  <id>http://detierno.github.io/</id>
  <author>
    <name><![CDATA[Denis Antoniazzi Tierno]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Self E O Interpretador Ruby]]></title>
    <link href="http://detierno.github.io/blog/2014/08/28/self-e-o-interpretador-ruby/"/>
    <updated>2014-08-28T23:34:00-03:00</updated>
    <id>http://detierno.github.io/blog/2014/08/28/self-e-o-interpretador-ruby</id>
    <content type="html"><![CDATA[<p>Como prometido ao @fnando pós Rubyconf 2014 estou iniciando um blog com
algumas coisas que ando vendo ao longo do meu dia a dia com ruby.</p>

<p>Ao iniciar com ruby me deparei com um conceito importante e que, por muito tempo, permaneceu como mistério para mim. Falo do <strong>self</strong> e do entendimento de como o interpretador ruby se comporta.</p>

<p>É de grande importancia conseguirmos entender qual objeto esta em foco em cada linha de código que lemos ou seja, entender quem é o objeto em questão, entender quem é o <strong>self</strong>. Para ilustrar a explicação tome como base o código a seguir e tente adivinhar qual a saída da execução do mesmo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Human</span>
</span><span class='line'>  <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">walk</span><span class="p">(</span><span class="n">steps</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'>    <span class="vi">@steps</span> <span class="o">=</span> <span class="n">steps</span>
</span><span class='line'>    <span class="n">run</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">run</span>
</span><span class='line'>    <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;start run after </span><span class="si">#{</span><span class="vi">@steps</span><span class="si">}</span><span class="s2"> steps&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">me</span> <span class="o">=</span> <span class="no">Human</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="nb">self</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ao executar esse código o resultado seria algo parecido com:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>  main
</span><span class='line'>  Human
</span><span class='line'>  Human
</span><span class='line'>  #&lt;Human:0x007fec31031068&gt;
</span><span class='line'>  #&lt;Human:0x007fec31031068 @steps=4&gt;
</span><span class='line'>  &quot;start run after 4 steps&quot;
</span><span class='line'>  main
</span></code></pre></td></tr></table></div></figure>


<p>Se você entendeu a saída do exemplo provavelmente não precisa continuar a leitura desse post, mas para quem não conseguiu captar vamos a explicação. Nada melhor do que explicar linha a linha:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="nb">self</span> <span class="c1"># =&gt; 1 - main</span>
</span><span class='line'><span class="c1"># main é um objeto que o ruby cria (instância da classe Object)</span>
</span><span class='line'><span class="c1"># para evitar que se tenha um contexto vazio, assim é possível</span>
</span><span class='line'><span class="c1"># chamar o self em qualquer situação</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Human</span>
</span><span class='line'>  <span class="nb">p</span> <span class="nb">self</span> <span class="c1"># =&gt; 2 - Human</span>
</span><span class='line'>  <span class="c1"># Aqui o interpretador já entrou na classe e o self passa a ser a própria classe</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># A seguir o interpretador irá ler os métodos walk() e run()</span>
</span><span class='line'>  <span class="c1"># mas não irá imprimir os selfs existentes pois como os métodos</span>
</span><span class='line'>  <span class="c1"># não são executados ainda o intepretador somente adiciona estes</span>
</span><span class='line'>  <span class="c1"># métodos na chamada method table</span>
</span><span class='line'>  <span class="c1"># (responsável por guardar os métodos de instância da classe)</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">walk</span><span class="p">(</span><span class="n">steps</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'>    <span class="vi">@steps</span> <span class="o">=</span> <span class="n">steps</span>
</span><span class='line'>    <span class="n">run</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">run</span>
</span><span class='line'>    <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;start run after </span><span class="si">#{</span><span class="vi">@steps</span><span class="si">}</span><span class="s2"> steps&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Após adicionar os métodos novamente pedimos para imprimir</span>
</span><span class='line'>  <span class="c1"># o self que continua apontando para a própria classe</span>
</span><span class='line'>  <span class="nb">p</span> <span class="nb">self</span> <span class="c1"># =&gt; 3 - Human</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">me</span> <span class="o">=</span> <span class="no">Human</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Ao chamar o método walk() o self agora irá apontar</span>
</span><span class='line'><span class="c1"># para a instância &#39;me&#39; da classe Human e após atribuir</span>
</span><span class='line'><span class="c1"># uma variável de instância e chamarmos o método run() o self</span>
</span><span class='line'><span class="c1">#continua apontando para a mesma instância &#39;me&#39;, agora com a variável @steps definida</span>
</span><span class='line'>
</span><span class='line'><span class="n">me</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; 4 - #&lt;Human:0x007fc52d0b38b8&gt;</span>
</span><span class='line'><span class="c1"># =&gt; 5 - #&lt;Human:0x007fc52d0b38b8 @steps=4&gt;</span>
</span><span class='line'><span class="c1"># =&gt; &quot;start run after 4 steps&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="nb">self</span> <span class="c1"># =&gt; 6 - main</span>
</span><span class='line'><span class="c1"># Novamente estamos fora da classe e o self passa a ser novamente o main</span>
</span></code></pre></td></tr></table></div></figure>


<p>Espero que esse exemplo tenha esclarecido o misterioso <strong>self</strong> e até a próxima.</p>
]]></content>
  </entry>
  
</feed>
